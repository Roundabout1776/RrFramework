#pragma once

#include "Rr_Core.h"

/* Renderer Defines */
#define RR_FORCE_UNIFIED_QUEUE 0
#define RR_PERFORMANCE_COUNTER 1

#define RR_MAX_LAYOUT_BINDINGS 4
#define RR_MAX_SWAPCHAIN_IMAGE_COUNT 8
#define RR_FRAME_OVERLAP 2
#define RR_DEPTH_FORMAT VK_FORMAT_D32_SFLOAT
#define RR_PRERENDERED_DEPTH_FORMAT VK_FORMAT_D32_SFLOAT
#define RR_COLOR_FORMAT VK_FORMAT_R8G8B8A8_UNORM
#define RR_STAGING_BUFFER_SIZE ((1 << 20) * 16)

typedef u32 Rr_MeshIndexType;

typedef enum Rr_GenericDescriptorSetLayout
{
    RR_GENERIC_DESCRIPTOR_SET_LAYOUT_GLOBALS,
    RR_GENERIC_DESCRIPTOR_SET_LAYOUT_MATERIAL,
    RR_GENERIC_DESCRIPTOR_SET_LAYOUT_DRAW,
    RR_GENERIC_DESCRIPTOR_SET_LAYOUT_COUNT,
} Rr_GenericDescriptorSetLayout;

/* @TODO: Make a header shared with GLSL! */
#define RR_MAX_TEXTURES_PER_MATERIAL 4
